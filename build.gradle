buildscript{
	ext{ //전역변수를 설정하겠다.
		springBootversion = '2.2.2.RELEASE'
	}
	repositories { //각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정하는 것.
		mavenCentral() //본인이 만든 라이브러리를 업로드 하기위해 많은 과정, 설정 필요
		jcenter() //라이브러리 업로드 간단
	}
	dependencies{
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootversion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //이 플러그인은 스프링부트의 의존성들을 관리해주는 플러그인. 반드시 필요

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories{
	mavenCentral()
}

dependencies { //프로젝트 개발에 필요한 의존성들 선언
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.10'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}


}

test {
	useJUnitPlatform()
}
